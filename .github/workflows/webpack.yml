name: NodeJS with Webpack

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Build
      run: |
        npm install
        npx webpack
- name: Setup AWS SAM CLI
  # You may pin to the exact commit or the version.
  # uses: aws-actions/setup-sam@1711cf1906fb0dcc5ade7c8c3f55dd3e81ab4101
  uses: aws-actions/setup-sam@v2
  with:
    # The AWS SAM CLI version to install
    version: # optional
    # The Python interpreter to use for AWS SAM CLI
    python: # optional
    - name: Deploy to Cloudflare Workers with Wrangler
  # You may pin to the exact commit or the version.
  # uses: cloudflare/wrangler-action@4c10c1822abba527d820b29e6333e7f5dac2cabd
  uses: cloudflare/wrangler-action@2.0.0
  with:
    # (Legacy) Your Cloudflare API Key
    apiKey: # optional
    # (Legacy) Your Cloudflare Email
    email: # optional
    # Your Cloudflare API Token
    apiToken: # optional
    # Your Cloudflare Account ID
    accountId: # optional
    # The environment you'd like to publish your Workers project to - must be defined in wrangler.toml
    environment: # optional
    # The relative path which Wrangler commands should be run from
    workingDirectory: # optional
    # The version of Wrangler you'd like to use to publish your Workers project
    wranglerVersion: # optional
    # A new line deliminated string of environment variable names that should be configured as Worker secrets
    secrets: # optional
    # Commands to execute before publishing the Workers project
    preCommands: # optional
    # Commands to execute after publishing the Workers project
    postCommands: # optional
    # The Wrangler command you wish to run. For example: "publish" - this will publish your Worker
    command: # optional
    - name: Cloud Maker Deploy
  # You may pin to the exact commit or the version.
  # uses: cloud-maker-ai/github-action-deploy@f86239fb28b589a9898a361b3df1dac5f3d3fc8f
  uses: cloud-maker-ai/github-action-deploy@v1.0.1
  with:
    # Cloud Maker API Token
    CLOUD_MAKER_TOKEN: 
    # Cloud Maker Pipeline ID to be deployed
    CLOUD_MAKER_PIPELINE_ID: 
    # Cloud Maker Stage ID to be deployed
    CLOUD_MAKER_STAGE_ID: 
    - name: Push To Registry
  # You may pin to the exact commit or the version.
  # uses: redhat-actions/push-to-registry@3220bde582f36425b94538739dda03502719a28c
  uses: redhat-actions/push-to-registry@v2.4.1
  with:
    # Name of the image to push (e.g. username/imagename or imagename)
    image: # optional
    # The tag or tags of the image to push. For multiple tags, seperate by whitespace. For example, "latest v1"
    tags: # optional, default is latest
    # Hostname and optional namespace to push the image to (eg. quay.io/username or quay.io)
    registry: # optional
    # Username to use as credential to authenticate to the registry
    username: # optional
    # Password to use as credential to authenticate to the registry
    password: # optional
    # Verify TLS certificates when contacting the registry
    tls-verify: # optional, default is true
    # After copying the image, write the digest of the resulting image to the file.
By default, the filename will be determined from the image and tag.
The contents of this file are the digest output.

    digestfile: # optional
    # Extra args to be passed to podman push.
Separate arguments by newline. Do not use quotes - @actions/exec will do the quoting for you.

    extra-args: # optional
    - name: Install Octopus CLI
  # You may pin to the exact commit or the version.
  # uses: OctopusDeploy/install-octopus-cli-action@a6f6f8d5767b5a61a2f9fd7a2472c28788214e27
  uses: OctopusDeploy/install-octopus-cli-action@v1.2.0
  with:
    # Octopus CLI version
    version: # optional, default is latest
    - name: Trigger CircleCI Pipeline
  # You may pin to the exact commit or the version.
  # uses: CircleCI-Public/trigger-circleci-pipeline-action@ef1944e67053c1923ad772d2377575f2fd962169
  uses: CircleCI-Public/trigger-circleci-pipeline-action@v1.0.5
  with:
    # An optional additional metadata parameter. Will be available on the CircleCI pipeline as GHA_Meta
    GHA_Meta: # optional
    - name: SecureStack Web Vulnerability Analysis
  # You may pin to the exact commit or the version.
  # uses: SecureStackCo/actions-exposure@e1136b9e01e6963f3488f63d71c98e9134d7b08f
  uses: SecureStackCo/actions-exposure@v0.1.3
  with:
    # SecureStack API key - generate an API key at https://app.securestack.com
    securestack_api_key: 
    # SecureStack Application ID - can be retrieved by accessing required application at https://app.securestack.com
    securestack_app_id: 
    # Severities lower than this value will be reported in the workflow console but will not cause an error for the action; value should be one of: critical | high | medium | low
    severity: 
    # Optional flags for the bloodhound-cli recon command.  Run bloodhound-cli recon --help for more details.
    flags: # optional, default is 
    - name: Shipa Cloud
  # You may pin to the exact commit or the version.
  # uses: shipa-corp/shipa-gh-action@4633febbc36b24abb54f10b848c4aaca8a5b5745
  uses: shipa-corp/shipa-gh-action@0.0.2
  with:
    # File path to Shipa action yml file
    shipa-action: 
    - name: Dapr tool installer
  # You may pin to the exact commit or the version.
  # uses: dapr/setup-dapr@ffde132592c51fcb876dff3925598fd150137569
  uses: dapr/setup-dapr@v1
  with:
    # Version of Dapr CLI to install
    version: # optional, default is 1.2.0
    - name: Push Build Information to Octopus Deploy
  # You may pin to the exact commit or the version.
  # uses: OctopusDeploy/push-build-information-action@5096721de3c3074bb3906ee25eff7339ad4cdde3
  uses: OctopusDeploy/push-build-information-action@v1.0.1
  with:
    # The branch name, if omitted the GitHub ref will be used.
    branch: # optional
    # Enable debug logging.
    debug: # optional
    # Determines the action to perform with build information if it already exists in the repository. Valid values are "FailIfExists", "OverwriteExisting", and "IgnoreIfExists".
    overwrite_mode: # optional, default is FailIfExists
    # A multi-line list of packages to push to Octopus Deploy.
    packages: # optional
    # The version of the package(s)
    version: # optional
    - name: Create Release in Octopus Deploy
  # You may pin to the exact commit or the version.
  # uses: OctopusDeploy/create-release-action@6590af3510adb205b4789c1277390b2643610d4f
  uses: OctopusDeploy/create-release-action@v2.0.1
  with:
    # The name or ID of the project associated with this release.
    project: 
    # The API key used to access Octopus Deploy. An API key is required, but you may also use the OCTOPUS_API_KEY environment variable. If the guest account is enabled, a key of API-GUEST may be used. It is strongly recommended that this value retrieved from a GitHub secret.
    api_key: # optional
    # The base URL hosting Octopus Deploy (i.e. "https://octopus.example.com/"). The Server URL is required, but you may also use the OCTOPUS_HOST environment variable.
    server: # optional
    # The number for the new release. If omitted, Octopus Deploy will generate a release number.
    release_number: # optional
    # The name or ID of a space within which this command will be executed.
    space: # optional
    # The version number of all packages to use for this release.
    package_version: # optional
    # A multi-line list of version numbers to use for a package in the release. Format: StepName:Version or PackageID:Version or StepName:PackageName:Version. StepName, PackageID, and PackageName can be replaced with an asterisk ("*"). An asterisk will be assumed for StepName, PackageID, or PackageName if they are omitted.
    packages: # optional
    # The name or ID of the channel to use for the new release. If omitted, the best channel will be selected.
    channel: # optional
    # Git branch reference to the specific resources of a version controlled Octopus Project. This is required for version controlled projects.
    git_ref: # optional
    # Git commit pointing to the specific resources of a version controlled Octopus Project. If empty, it will use the HEAD from the corresponding gitRef parameter.
    git_commit: # optional
    # Ignore existing releases if present in Octopus Deploy with the matching version number.
    ignore_existing: # optional
    # The URL of a proxy to use (i.e. https://proxy.example.com). You may also use the OCTOPUS_PROXY environment variable.
    proxy: # optional
    # The username used to connect to a proxy. You may also use the OCTOPUS_PROXY_USERNAME environment variable. It is strongly recommended to retrieve this value from a GitHub secret.
    proxy_username: # optional
    # The password used to connect to a proxy. You may also use the OCTOPUS_PROXY_PASSWORD environment variable. It is strongly recommended to retrieve this value from a GitHub secret. If proxy_username and proxy_password are omitted and proxy URL is specified, the default credentials are used.
    proxy_password: # optional
    # The release notes associated with the new release (Markdown is supported).
    release_notes: # optional
    # Path to a file that contains release notes for the new release. Supports Markdown files.
    release_notes_file: # optional
    - name: Deploy WordPress to WP Engine
  # You may pin to the exact commit or the version.
  # uses: wpengine/github-action-wpe-site-deploy@55c5a1c1f35af5daa8be2bb79e837a6bf663a079
  uses: wpengine/github-action-wpe-site-deploy@v3.1.1
  with:
    # The private RSA key you will save in the Github Secrets
    WPE_SSHG_KEY_PRIVATE: 
    # optional php syntax check
    PHP_LINT: # optional
    # Optional flags for the deployment
    FLAGS: # default is -azvr --inplace --exclude=".*"
    # Optional WPE Clear cache
    CACHE_CLEAR: # optional, default is true
    # An optional source directory to deploy other than the root directory that is being versioned.
    SRC_PATH: # optional, default is .
    # An optional destination directory to deploy to other than the WordPress root.
    REMOTE_PATH: # optional, default is 
    # Destination to deploy to WPE
    WPE_ENV: # optional
    # Destination to deploy to WPE Prod
    PRD_ENV: # optional
    # Destination to deploy to WPE Stage
    STG_ENV: # optional
    # Destination to deploy to WPE Dev
    DEV_ENV: # optional
    # File containing custom scripts run after the rsync
    SCRIPT: # optional
    - name: Armory Continuous Deployment-as-a-Service
  # You may pin to the exact commit or the version.
  # uses: armory/cli-deploy-action@36fc96b3e295e960d22f96513ef781bb9865a87c
  uses: armory/cli-deploy-action@v1.0.0
  with:
    # Path to the configuration YAML file used to configure your deployment
    path-to-file: 
    # extra args to the deployment start command
    applicationName: # optional
    # extra context params to the deployment start command
    addContext: # optional
    # ClientId for Armory Cloud
    clientId: 
    # ClientSecret for Armory Cloud
    clientSecret: 
    # Intended audience of requests that will use your Armory Cloud authentication token. Is deployHostUrl by default
    audience: # optional, default is https://api.cloud.armory.io
    # Armory Cloud authentication provider url
    tokenIssuerUrl: # optional, default is https://auth.cloud.armory.io/oauth
    # Location of the Armory Cloud API which will handle your deployment
    deployHostUrl: # optional, default is api.cloud.armory.io
    - name: Deploy Ghost Theme
  # You may pin to the exact commit or the version.
  # uses: TryGhost/action-deploy-theme@26652c5cee097c6b31bbd3319b8427369043a566
  uses: TryGhost/action-deploy-theme@v1.4.1
  with:
    # Ghost Admin API Url
    api-url: 
    # Ghost Admin API Key
    api-key: 
    # Files or folders to exclude (space-separated list)
    exclude: # optional
    # A custom theme name that overrides the default name in package.json
    theme-name: # optional
    # Path to a built zip file. If this is included, the `exclude` and `theme-name` options are ignored
    file: # optional
    - name: HashiCorp - Setup Terraform
  # You may pin to the exact commit or the version.
  # uses: hashicorp/setup-terraform@633666f66e0061ca3b725c73b2ec20cd13a8fdd1
  uses: hashicorp/setup-terraform@v2.0.3
  with:
    # The hostname of a Terraform Cloud/Enterprise instance to place within the credentials block of the Terraform CLI configuration file. Defaults to `app.terraform.io`.
    cli_config_credentials_hostname: # optional, default is app.terraform.io
    # The API token for a Terraform Cloud/Enterprise instance to place within the credentials block of the Terraform CLI configuration file.
    cli_config_credentials_token: # optional
    # The version of Terraform CLI to install. Instead of full version string you can also specify constraint string starting with "<" (for example `<1.13.0`) to install the latest version satisfying the constraint. A value of `latest` will install the latest version of Terraform CLI. Defaults to `latest`.
    terraform_version: # optional, default is latest
    # Whether or not to install a wrapper to wrap subsequent calls of the `terraform` binary and expose its STDOUT, STDERR, and exit code as outputs named `stdout`, `stderr`, and `exitcode` respectively. Defaults to `true`.
    terraform_wrapper: # optional, default is true
    - name: Preview Environments
  # You may pin to the exact commit or the version.
  # uses: UffizziCloud/preview-action@6f946b7c6d38a24e28a134e6f833783dfaaaf782
  uses: UffizziCloud/preview-action@v2.6.1
  with:
    # An alternate compose file
    compose-file: # optional, default is docker-compose.yaml
    # URL to Uffizzi
    server: # default is https://app.uffizzi.com
    # Uffizzi username
    username: # optional
    # Uffizzi password
    password: # optional
    # Uffizzi project slug
    project: # optional
    # Username to authenticate to GHCR
    ghcr-username: # optional
    # Password to authenticate to GHCR
    ghcr-access-token: # optional
    # Value of `github.event.number` context
    github-event-number: # optional
    # Value of `github.ref` context
    github-ref: # optional
    # Value of `github.repository` context
    github-repository: # optional
    # 
    request-token: # optional
    # 
    request-token-url: # optional
    # 
    dockerhub-username: # optional
    # 
    dockerhub-password: # optional
    # Azure username
    acr-username: # optional
    # Azure password
    acr-password: # optional
    # Azure registry url
    acr-registry-url: # optional
    # Amazon Web Services access key id
    aws-access-key-id: # optional
    # Amazon Web Services secret access key
    aws-secret-access-key: # optional
    # Amazon Web Services registry url
    aws-registry-url: # optional
    # Google Cloud service key
    gcloud-service-key: # optional
    # Custom docker registry username
    docker-registry-username: # optional
    # Custom docker registry password
    docker-registry-password: # optional
    # Custom docker registry url
    docker-registry-url: # optional
    - name: Set up gcloud Cloud SDK environment
  # You may pin to the exact commit or the version.
  # uses: google-github-actions/setup-gcloud@d51b5346f85640ec2aa2fa057354d2b82c2fcbce
  uses: google-github-actions/setup-gcloud@v1
  with:
    # Version of the gcloud SDK to install. If unspecified or set to "latest",
the latest available gcloud SDK version for the target platform will be
installed. Example: "290.0.1".
    version: # optional, default is latest
    # ID of the Google Cloud project. If provided, this will configure gcloud to
use this project ID by default for commands. Individual commands can still
override the project using the --project flag which takes precedence.
    project_id: # optional
    # List of Cloud SDK components to install
    install_components: # optional
    - name: Pulumi CLI Action
  # You may pin to the exact commit or the version.
  # uses: pulumi/actions@06bc93fb6890a1d5bc8e4fab9a2354389011666b
  uses: pulumi/actions@v3.20.0
  with:
    # Pulumi command to run, eg. up
    command: 
    # Which stack you want to apply to, eg. dev
    stack-name: 
    # Location of your Pulumi files. Defaults to ./
    work-dir: # optional, default is ./
    # If true, a comment will be created with results
    comment-on-pr: # optional, default is false
    # Overrides the PR used to comment on
    comment-on-pr-number: # optional, default is 0
    # Github Token
    github-token: # optional, default is ${{ github.token }}
    # A cloud URL to log in to
    cloud-url: # optional, default is 
    # The type of the provider that should be used to encrypt and decrypt secrets. Possible choices: default, passphrase, awskms, azurekeyvault, gcpkms, hashivault
    secrets-provider: # optional, default is 
    # Allow P resource operations to run in parallel at once (1 for no parallelism). Defaults to unbounded.
    parallel: # optional, default is 2147483647
    # Optional message to associate with the update operation
    message: # optional, default is 
    # Config to use during the operations
    config-map: # optional, default is 
    # Return an error if any changes occur during this update
    expect-no-changes: # optional
    # Display operation as a rich diff showing the overall change
    diff: # optional
    # Specify resources to replace. Multiple resources can be specified one per line
    replace: # optional
    # Specify a single resource URN to update. Other resources will not be updated. Multiple resources can be specified one per line
    target: # optional
    # Allows updating of dependent targets discovered but not specified in target.
    target-dependents: # optional, default is false
    # Run one or more policy packs as part of this update.
    policyPacks: # optional
    # Path to JSON file containing the config for the policy pack of the corresponding "--policy-pack" flag.
    policyPackConfigs: # optional
    # Perform a stack refresh as part of the operation
    refresh: # optional, default is false
    # Create the stack if it currently does not exist
    upsert: # optional, default is false
    # Edit previous PR comment instead of posting new one
    edit-pr-comment: # optional, default is true
    # Install a specific version of the Pulumi CLI
    pulumi-version: # optional, default is ^3
    # Colorize output. Choices are: always, never, raw, auto
    color: # optional, default is auto
    - name: Liquibase Github Action
  # You may pin to the exact commit or the version.
  # uses: liquibase/liquibase-github-action@384eaf0e3236058a40fa7c1e2064c6482fbbbf8e
  uses: liquibase/liquibase-github-action@v7
  with:
    # Operation to run
    operation: 
    # Path to Change Log directory
    classpath: # optional
    # Name of Change Log File
    changeLogFile: # optional
    # Database Username
    username: # optional
    # Database Password
    password: # optional
    # Database URL
    url: # optional
    # Count for updateCount and rollbackCount
    count: # optional
    # Tag for tag, updateToTag, and rollback
    tag: # optional
    # Date for rollbackToDate
    date: # optional
    # Reference URL for diff
    referenceUrl: # optional
    # Configuration file for checks execution
    checksSettingsFile: # optional
    # DEPRECATED: Liquibase Pro license key used to unlock paid capabilities
    proLicenseKey: # optional
    # Liquibase Hub API key for operations
    hubApiKey: # optional
    # Liquibase license key used to unlock paid capabilities
    licenseKey: # optional
    # Specifies the Liquibase changelog table
    databaseChangeLogTableName: # optional
    # Specifies the Liquibase changelog lock table
    databaseChangeLogLockTableName: # optional
    - name: GitHub Action for DigitalOcean - doctl
  # You may pin to the exact commit or the version.
  # uses: digitalocean/action-doctl@2486534218b8a45a41645d4fdcf0108880d12b50
  uses: digitalocean/action-doctl@v2.2.0
  with:
    # Version of doctl to install
    version: # optional, default is latest
    # DigitalOcean API Token
    token: 
    - name: Cloud Functions Deploy
  # You may pin to the exact commit or the version.
  # uses: google-github-actions/deploy-cloud-functions@14509ca55199d9348161571e36c48e44f855030d
  uses: google-github-actions/deploy-cloud-functions@v1
  with:
    # Name of the Cloud Function.
    name: 
    # Description for the Cloud Function.
    description: # optional
    # ID of the project in which to deploy the Cloud Function.
    project_id: # optional
    # Region to deploy the function in. Defaults to us-central1, if not specified.
    region: # optional, default is us-central1
    # Path to function deployment directory within the source repo.
    source_dir: # optional, default is ./
    # List of key-value pairs to set as environment variables in the form KEY1=VALUE1,KEY2=VALUE2. Only one of env_vars or env_vars_file can be specified.
    env_vars: # optional
    # Path to a local YAML file with definitions for all environment variables. Only one of env_vars or env_vars_file can be specified.
    env_vars_file: # optional
    # List of key-value pairs to set as function labels in the form label1=VALUE1,label2=VALUE2.
    labels: # optional
    # Name of a function (as defined in source code) that will be executed. Defaults to the resource name suffix, if not specified.
    entry_point: # optional
    # Runtime to use for the function.
    runtime: 
    # The amount of memory in MB available for a function. Defaults to 256.
    memory_mb: # optional
    # The VPC Access connector that the function can connect to.
    vpc_connector: # optional
    # The egress settings for the connector, controlling what traffic is diverted through it.
    vpc_connector_egress_settings: # optional
    # The ingress settings for the function, controlling what traffic can reach it.
    ingress_settings: # optional
    # List of key-value pairs to set as environment variables at runtime of the
format "KEY1=SECRET_VERSION_REF" where SECRET_VERSION_REF is a full
resource name of a Google Secret Manager secret of the format
"projects/p/secrets/s/versions/v". If the project is omitted, it will be
inferred from the Cloud Function project ID. If the version is omitted, it
will default to "latest".
    secret_environment_variables: # optional
    # List of key-value pairs to mount as volumes at runtime of the format
"PATH=SECRET_VERSION_REF" where PATH is the mount path inside the
container (e.g. "/etc/secrets/my-secret") and SECRET_VERSION_REF is a full
resource name of a Google Secret Manager secret of the format
"projects/p/secrets/s/versions/v". If the project is omitted, it will be
inferred from the Cloud Function project ID. If the version is omitted, it
will default to "latest".
    secret_volumes: # optional
    # The email address of the Google Cloud service account to use as the
runtime service account for the function. If unspecified, the default
Cloud Functions runtime service account is used.

Note this differs from the service account used to deploy the Cloud
Function, which is the currently-authenticated principal. However, the
deploying service account must have permission to impersonate the runtime
service account, which can be achieved by granting the deployment service
account "roles/iam.serviceAccountUser" permission on the runtime service
account.
    service_account_email: # optional
    # The function execution timeout.
    timeout: # optional, default is 60s
    # The minimum number of instances for the function.
    min_instances: # optional
    # The maximum number of instances for the function.
    max_instances: # optional
    # The security level for an HTTP(s) trigger. If set to "secure_always", the
function will only be accessible over the https protocol. If set to
"secure_optional", the function will be accessible over the http and https
protocols. The default value is "security_level_unspecified", which uses
the platform's default value.
    https_trigger_security_level: # optional, default is security_level_unspecified
    # Specifies which action should trigger the function.
    event_trigger_type: # optional
    # Specifies which resource from eventTrigger is observed.
    event_trigger_resource: # optional
    # The hostname of the service that should be observed.
    event_trigger_service: # optional
    # If true, the event will be retried if the function returns a failure.
    event_trigger_retry: # optional
    # The function deployment timeout in seconds.
    deploy_timeout: # optional, default is 300
    # Name of the Cloud Build Custom Worker Pool that should be used to build
the function.
    build_worker_pool: # optional
    # Optional list of environment variables that should be available while the
function is built. Note this is different than runtime environment
variables, which should be set with 'env_vars'.
    build_environment_variables: # optional
    # Path to a local YAML file containing variables. See 'env_vars_file' for
syntax.
    build_environment_variables_file: # optional
    # Registry to use for storing Docker containers. This must be one of
"artifact-registry" or "container-registry".
    docker_registry: # optional, default is container-registry
    # User managed repository created in Artifact Registry.
    docker_repository: # optional
    # Resource name of a Google Cloud KMS crypto key used to encrypt/decrypt
function resources. If specified, you must also provide an artifact
registry repository using the 'docker_repository' field that was created
with the same key.
    kms_key_name: # optional
    - name: Cloudflare Pages GitHub Action
  # You may pin to the exact commit or the version.
  # uses: cloudflare/pages-action@586e8fc6937770c5d82787c58a3969d90aebb4aa
  uses: cloudflare/pages-action@v1.2.0
  with:
    # Cloudflare API Token
    apiToken: 
    # Cloudflare Account ID
    accountId: 
    # The name of the Pages project to upload to
    projectName: 
    # The directory of static assets to upload
    directory: 
    # GitHub Token
    gitHubToken: # optional
    # The name of the branch you want to deploy to
    branch: # optional
    - name: Dagger for GitHub
  # You may pin to the exact commit or the version.
  # uses: dagger/dagger-for-github@75549c92b94513311d37a80f2732cc3399f9af86
  uses: dagger/dagger-for-github@v3.2.0
  with:
    # Dagger version
    version: # optional, default is 0.2
    # Arguments to pass to Dagger
    args: # optional
    # List of Dagger commands
    cmds: # optional
    # Working directory (below repository root)
    workdir: # optional, default is .
    # Just install Dagger
    install-only: # optional, default is false
    # Cleanup Dagger home folder at the end of a job
    cleanup: # optional, default is true
    - name: Deploy Environment
  # You may pin to the exact commit or the version.
  # uses: parasoft/deploy-environment-action@486e9382c6c2958fcbaad60b895da799d16730c2
  uses: parasoft/deploy-environment-action@1.0.2
  with:
    # CTP URL
    ctpUrl: 
    # CTP Username
    ctpUsername: 
    # CTP Password
    ctpPassword: 
    # Name of the system
    system: 
    # Name of the environment
    environment: 
    # Name of the environment instance to provision
    instance: 
    # Fail action and abort on provisioning failure
    abortOnFailure: # optional
    # Virtual assets in the environment will be replicated on another server
    copyToVirtualize: # optional
    # The environment assets will be copied to a Virtualize server matching this name
    virtServerName: # optional
    # The name for the replicated environment can be used to later destroy the environment
    newEnvironmentName: # optional
    # Duplicate associated data repositories before provisioning
    duplicateDataRepo: # optional
    # Where to duplicate data repository
    duplicateType: # optional
    # The host of the data repository server
    repoHost: # optional
    # The port of the data repository server
    repoPort: # optional
    # The username of the data repository server
    repoUsername: # optional
    # The password of the data repository server
    repoPassword: # optional
    - name: Disconnect Server
  # You may pin to the exact commit or the version.
  # uses: parasoft/disconnect-server-action@38f96c12af08dfa3bde1a417382cad62c41cd9fb
  uses: parasoft/disconnect-server-action@1.0.2
  with:
    # CTP URL
    ctpUrl: 
    # CTP Username
    ctpUsername: 
    # CTP Password
    ctpPassword: 
    # Used to specify server by host or name
    serverMatch: 
    # Host or name of the server
    server: 
    - name: Execute Job
  # You may pin to the exact commit or the version.
  # uses: parasoft/execute-job-action@1899d360584e281e027c537d2df0f75a1115776e
  uses: parasoft/execute-job-action@1.0.7
  with:
    # CTP URL
    ctpUrl: 
    # CTP Username
    ctpUsername: 
    # CTP Password
    ctpPassword: 
    # CTP Test Execution Job Name
    ctpJob: 
    # Abort the job after timeout exceeded
    abortOnTimeout: # optional
    # Timeout value in minutes
    timeoutInMinutes: # optional
    # Publish test execution results to DTP
    publishReport: # optional
    # DTP URL
    dtpUrl: # optional
    # DTP Username
    dtpUsername: # optional
    # DTP Password
    dtpPassword: # optional
    # DTP Project Name
    dtpProject: # optional
    # Build ID to send to DTP
    buildId: # optional
    # Session Tag to send to DTP
    sessionTag: # optional
    # Append the test variable set environment name to the session tag
    appendEnvironment: # optional
    - name: Destroy Environment
  # You may pin to the exact commit or the version.
  # uses: parasoft/destroy-environment-action@d743e3bbffd5ff59a19764ae27b8b4c0bed6d4e8
  uses: parasoft/destroy-environment-action@1.0.2
  with:
    # CTP URL
    ctpUrl: 
    # CTP Username
    ctpUsername: 
    # CTP Password
    ctpPassword: 
    # Name of the system
    system: 
    # Name of the environment
    environment: 
    - name: Run Parasoft dotTEST
  # You may pin to the exact commit or the version.
  # uses: parasoft/run-dottest-action@79dcd265dfb8934d60521c672b9d0d97b141af20
  uses: parasoft/run-dottest-action@1.2.3
  with:
    # Path to the working directory.
    workingDir: # optional, default is ${{ github.workspace }}
    # Path to the dotTEST installation directory, which contains dottestcli.exe. If not specified, dottestcli.exe will be searched for on PATH.
    installDir: # optional
    # Path to the solution to be analyzed. Specify a semicolon-separated list of paths to analyze many solutions. Supports ANT-style wildcards.
    solution: # optional, default is .\*.sln
    # Path to the project to be analyzed when no solution is provided. Specify a semicolon-separated list of paths to analyze many projects. Supports ANT-style wildcards.
    project: # optional
    # Full path to the website directory to be analyzed when no solution is provided.
    website: # optional
    # URL of the test configuration to be used for analysis.
    testConfig: # optional, default is builtin://Recommended .NET Core Rules
    # Solution-relative path to a project in a solution, a directory of files in a project, or a file. Use a semicolon-separated list to specify multiple paths.
    resource: # optional
    # File system paths to files to include in analysis. Supports ANT-style wildcards. If not specified, all files are analyzed. Use a semicolon-separated list to specify multiple paths.
    include: # optional
    # File system paths to files to exclude from analysis. Supports ANT-style wildcards. Use a semicolon-separated list to specify multiple paths.
    exclude: # optional
    # Path to additional assemblies required to resolve dependencies. Specify a semicolon-separated list of paths to provide many references. Supports ANT-style wildcards.
    reference: # optional
    # Path to the directory where the report will be created.
    reportDir: # optional, default is ${{ github.workspace }}/.dottest/report/${{ github.run_number }}
    # Publishes report to DTP.
    publish: # optional
    # Path to a settings file. Use a semicolon-separated list to specify multiple paths.
    settings: # optional
    # A single configuration setting in the "key=value" format. Use a semicolon-separated list to specify multiple paths.
    property: # optional
    # Disables the build of the tested solutions or projects.
    nobuild: # optional
    # Runs tests that are tagged with specific issue tracking types/IDs.
    testTagFilter: # optional
    # Solution configuration, e.g. "Debug".
    solutionConfig: # optional
    # Project configuration, e.g. "Debug".
    projectConfig: # optional
    # Target platform of the solution configuration (e.g."Any CPU") or project configuration (e.g. "AnyCPU").
    targetPlatform: # optional
    # Path to the location where console output is saved.
    out: # optional
    # Fails the command with exit code 2 or 4 if any findings are reported. It is recommended to use it with continue-on-error: true.
    fail: # optional
    # Lists all settings that are currently used.
    showsettings: # optional
    # 'Mode for GitHub report (SARIF) generation. You can use:
    # - "legacy" - for dotTEST 2020.2 or older
    # - "builtin" - for dotTEST 2021.1 or newer (default)
    sarifMode: # optional, default is builtin
    - name: Run Parasoft C/C++test
  # You may pin to the exact commit or the version.
  # uses: parasoft/run-cpptest-action@aeb0150eeb0f96098ad3bac53609fd462f88c4f6
  uses: parasoft/run-cpptest-action@1.0.1
  with:
    # Installation folder of Parasoft C/C++test. If not specified, the cpptestcli executable must be added to $PATH.
    installDir: # optional
    # Working directory for running C/C++test.
    workingDir: # optional, default is ${{ github.workspace }}
    # Identifier of a compiler configuration. Ensure you specify the configuration that matches your compiler.
    compilerConfig: # optional, default is gcc_9-64
    # Test configuration to be used for code analysis.
    testConfig: # optional, default is builtin://Recommended Rules
    # Output folder for reports from code analysis.
    reportDir: # optional, default is reports
    # Format of reports from code analysis.
    reportFormat: # optional, default is xml,html,sarif
    # Input scope for analysis (typically, cpptestscan.bdf or compile_commands.json, depending on the project type and the build system).
    input: # optional, default is cpptestscan.bdf
    # Additional parameters for the cpptestcli executable.
    additionalParams: # optional, default is 
    # Command line pattern for running C/C++test.
    commandLinePattern: # optional, default is ${cpptestcli} -compiler "${compilerConfig}" -config "${testConfig}" -property report.format=${reportFormat} -report "${reportDir}" -module . -input "${input}" ${additionalParams}
    - name: RapidAPI Testing Trigger
  # You may pin to the exact commit or the version.
  # uses: RapidAPI/gh-api-testing-trigger@b5adafb0971d0f6ee473dfe345886e46b3b0a2ac
  uses: RapidAPI/gh-api-testing-trigger@v0.0.3
  with:
    # ID of the test to run
    test: 
    # The location the test will be executed in
    location: # default is AWS-US-EAST-1
    # The environment ID the test will run in
    environment: # optional
    - name: Run Parasoft Jtest
  # You may pin to the exact commit or the version.
  # uses: parasoft/run-jtest-action@e0fc5eba99b1236c2c04d7cbfd8d67808bc8bf9e
  uses: parasoft/run-jtest-action@1.0.0
  with:
    # Installation folder of Parasoft Jtest. If not specified, the cpptestcli executable must be added to PATH.
    installDir: # optional
    # Working directory for running Jtest.
    workingDir: # optional, default is ${{ github.workspace }}
    # Test configuration to be used for code analysis.
    testConfig: # optional, default is builtin://Recommended Rules
    # Output folder for reports from code analysis.
    reportDir: # optional, default is reports
    # Format of reports from code analysis.
    reportFormat: # optional, default is xml,html,sarif
    # Input scope for analysis.
    input: # optional, default is jtest.data.json
    # Additional parameters for the jtestcli executable.
    additionalParams: # optional, default is 
    - name: OWASP ZAP Baseline Scan
  # You may pin to the exact commit or the version.
  # uses: zaproxy/action-baseline@7cea08522cd386f6c675776d5e4296aecf61f33b
  uses: zaproxy/action-baseline@v0.7.0
  with:
    # GitHub Token to create issues in the repository
    token: # optional, default is ${{ github.token }}
    # Target URL
    target: 
    # Relative path of the ZAP configuration file
    rules_file_name: # optional
    # The Docker file to be executed
    docker_name: # default is owasp/zap2docker-stable
    # Additional command line options
    cmd_options: # optional
    # The title for the GitHub issue to be created
    issue_title: # optional, default is ZAP Scan Baseline Report
    # The action status will be set to fail if ZAP identifies any alerts during the baseline scan
    fail_action: # optional
    # The action will file the report to the GitHub issue using the issue_title input
    allow_issue_writing: # optional, default is true
    - name: OWASP ZAP Full Scan
  # You may pin to the exact commit or the version.
  # uses: zaproxy/action-full-scan@6eade0f93b10fad8cfb4e63b979703a2cbd0cc98
  uses: zaproxy/action-full-scan@v0.4.0
  with:
    # GitHub Token to create issues in the repository
    token: # optional, default is ${{ github.token }}
    # Target URL
    target: 
    # Relative path of the ZAP configuration file
    rules_file_name: # optional
    # The Docker file to be executed
    docker_name: # default is owasp/zap2docker-stable
    # Additional command line options
    cmd_options: # optional
    # The title for the GitHub issue to be created
    issue_title: # optional, default is ZAP Full Scan Report
    # The action status will be set to fail if ZAP identifies any alerts during the full scan
    fail_action: # optional
    # Whether Github issues should be created or not
    allow_issue_writing: # optional, default is true
    - name: APIsec Scan
  # You may pin to the exact commit or the version.
  # uses: apisec-inc/apisec-run-scan@025432089674a28ba8fb55f8ab06c10215e772ea
  uses: apisec-inc/apisec-run-scan@v1.0.6
  with:
    # The APIsec username with which the scans will be executed
    apisec-username: # default is 
    # The Password of the APIsec user with which the scans will be executed
    apisec-password: # default is 
    # The Name of the project for security scan
    apisec-project: # default is 
    # The Name of the scan profile to be executed
    apisec-profile: # optional, default is Master
    # The location the scan will be executed in
    apisec-region: # optional, default is 
    # The path to the sarif format result file
    sarif-result-file: # optional, default is 
    # To trigger scan email reports, set this value as "true" or else "false"
    apisec-email-report: # optional, default is 
    # Pass the severity string for which pipeline execution breaks upon finding that severity vulnerability. Possible string values are Critical, High and Medium severity. By default its an empty string "".
    apisec-fail-on-vuln-severity: # optional, default is 
    # To register a project, set this value as "true" or else "false"
    apisec-oas: # optional, default is false
    # OpenAPI Spec Url for registering a project
    apisec-openapi-spec-url: # optional, default is 
    # To regenerate/refresh the playbooks of a project, set this value as "true" or else "false"
    apisec-refresh-playbooks: # optional, default is 
    - name: EthicalCheck
  # You may pin to the exact commit or the version.
  # uses: apisec-inc/ethicalcheck-action@6538d51caea53470bf8018e21f93414a70026f46
  uses: apisec-inc/ethicalcheck-action@v1.0.6
  with:
    # The Open API Specification or public Postman collection URL.
    oas-url: # default is 
    # The email address to which the API penetration test report will be sent.
    email: # default is 
    # The path to the sarif format result file
    sarif-result-file: # optional, default is 
    - name: Cypress.io
  # You may pin to the exact commit or the version.
  # uses: cypress-io/github-action@c5724eda82337bcff977ce14509f47052c12e04c
  uses: cypress-io/github-action@v5.0.0
  with:
    # Sends test results to Cypress Dashboard
    record: # optional
    # Set configuration values. Separate multiple values with a comma. The values set here override any values set in your configuration file.
    config: # optional
    # Path to the cypress config file where configuration values are set.
    config-file: # optional, default is 
    # Sets Cypress environment variables
    env: # optional
    # Name of the browser to use
    browser: # optional
    # Command that overrides cypress run
    command: # optional
    # Command for starting local server in the background
    start: # optional
    # A different start command on Windows
    start-windows: # optional
    # Command to run in build step before starting tests
    build: # optional
    # Whether or not to run install
    install: # optional
    # Custom install command to use
    install-command: # optional
    # Whether or not to run tests
    runTests: # optional
    # Local server URL to wait for
    wait-on: # optional
    # Amount of time to wait for wait-on url to be available
    wait-on-timeout: # optional
    # Whether or not to load balance tests using multiple containers
    parallel: # optional
    # Group setting for tests
    group: # optional
    # Tag setting for tests
    tag: # optional
    # Working directory containing Cypress folder
    working-directory: # optional
    # Whether or not to use headed mode
    headed: # optional
    # Provide a specific specs to run
    spec: # optional
    # Path of project to run
    project: # optional
    # You can prefix the default test command using the command-prefix option.
    command-prefix: # optional
    # ID associates multiple CI machines to one test run
    ci-build-id: # optional
    # Custom cache key
    cache-key: # optional
    # Whether or not to silence any Cypress specific output from stdout
    quiet: # optional
    # Lets the action know that Cypress is running component tests and not e2e tests
    component: # optional
    - name: test-autograde
  # You may pin to the exact commit or the version.
  # uses: masaditya/test-autograde@f3040d06e4948cdf3648a5ee235c36561dc145ec
  uses: masaditya/test-autograde@v10.0
  with:
    # kelas yang diberikan tugas
    kelas: # optional, default is 
    # tugas minggu ke
    minggu-ke: # optional, default is 
    
